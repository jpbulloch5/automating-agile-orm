# Builds and deploys the ORM .jar artifact on pushes to dev or main

trigger:
- main
- dev

variables:
- group: Keys
- name: image_repo
  value: 'jpbulloch5/revature_p1_orm'

pool:
  vmImage: ubuntu-latest

stages:
- stage: build
  jobs:
  - job: build
    steps:
    
    - template: test_and_build.yml
      parameters:
        sonar_org: 'isaac-revature-training-uta'
        sonar_key: 'revature-training-uta_team_e_p1_orm'
        sonar_project: 'team_e_p1_orm'
        classes_dir: '/src/main/java/eorm/annotations,enums,exceptions,scriptors,utils'
        artifact_name: 'eorm-1.0.jar'

    displayName: Build and Test ORM --> Job
  displayName: Build and Test ORM --> Stage

- stage: dockerize
  dependsOn: []
  jobs:
  - job: dockerize
    steps:

    - task: Docker@2
      inputs:
        containerRegistry: 'Jacob''s Docker Hub'
        repository: $(image_repo)
        command: 'build'
        Dockerfile: 'Dockerfile'
        tags: |
          $(Build.BuildId)
          latest_dev
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
      displayName: Build dev ORM container --> Task

    - task: Docker@2
      inputs:
        containerRegistry: 'Jacob''s Docker Hub'
        repository: $(image_repo)
        command: 'build'
        Dockerfile: 'Dockerfile'
        tags: |
          $(Build.BuildId)
          latest
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
      displayName: Build main ORM container --> Task
      
    - task: Docker@2
      inputs:
        containerRegistry: 'Jacob''s Docker Hub'
        repository: $(image_repo)
        command: 'push'
        tags: |
          $(Build.BuildId)
          latest_dev
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
      displayName: Push dev ORM image to DockerHub --> Task

    - task: Docker@2
      inputs:
        containerRegistry: 'Jacob''s Docker Hub'
        repository: $(image_repo)
        command: 'push'
        tags: |
          $(Build.BuildId)
          latest
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
      displayName: Push main ORM image to DockerHub --> Task

    displayName: Build and Push ORM Docker image --> Job
  displayName: Build and Push ORM Docker image --> Stage

- stage: report
  dependsOn:
  - build
  - dockerize
  jobs:
  - job: report
    steps:
    - checkout: none
    - task: ado-discord-webhook@1
      inputs:
        channelId: '$(discord_id)'
        webhookKey: '$(discord_webhook)'
        name: '$(System.TeamProject) --> '
        avatar: 'https://avatarfiles.alphacoders.com/565/thumb-1920-56514.jpg'
        messageType: 'content'
        content: |
          __**$(Build.DefinitionName)**__
          **Image:** $(image_repo):$(Build.BuildId)
          **Branch:** $(Build.SourceBranch)
          **Build:** $(Build.BuildNumber)
          **Reason:** $(Build.Reason)
          **Status:** $(Agent.JobStatus)
          **Repo:** $(Build.Repository.Uri)
          **Message:** $(Build.SourceVersionMessage)
      displayName: Publish build details to Discord --> Task
        
    displayName: Report build results --> Job
  displayName: Report build results --> Stage

